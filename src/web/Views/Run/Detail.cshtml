@model TaskRunDetailViewModel

<div class="bg-dark rounded p-2 my-4 small">
    <div class="row mb-2">
        <div class="col-md-2 fw-bold">Id</div>
        <div class="col-md-4">
            #@Model.RunId
        </div>
        <div class="col-md-2 fw-bold">Task</div>
        <div class="col-md-4">
            @Model.TaskName (<a href="/task?id=@Model.TaskId">#@Model.TaskId</a>)
        </div>
    </div>
    <div class="row mb-2">
        <div class="col-md-2 fw-bold">Created At</div>
        <div class="col-md-4">
            <span title="@Model.CreatedAt">@Model.CreatedAtDisplay</span>
        </div>
        <div class="col-md-2 fw-bold">Status</div>
        <div class="col-md-4" id="status">
            -
        </div>
    </div>
    <div class="row mb-2">
        <div class="col-md-2 fw-bold">Started At</div>
        <div class="col-md-4" id="startedAt">
            -
        </div>
        <div class="col-md-2 fw-bold">Completed At</div>
        <div class="col-md-4" id="completedAt">
            -
        </div>
    </div>
    <div class="row mb-2">
        <div class="col-md-2 fw-bold">Elapsed</div>
        <div class="col-md-10" id="elapsed">
            -
        </div>
    </div>
</div>

<div class="my-4">
    <h4>Output</h4>
    <p class="small">Displaying latest <span id="outputLength">0</span> records, check full records <a href="/run/@Model.RunId/output/raw" target="_blank">here</a>.</p>
    <pre id="output" class="overflow-auto p-2 height-max-2 bg-dark rounded mb-2">
    </pre>
</div>

<div class="my-4">
    <h4>Snapshot</h4>
    <div class="row small">
        <div class="col-md-2 fw-bold">Shell Name: </div>
        <div class="col-md-2">@Model.ShellName</div>
        <div class="col-md-2 fw-bold">Shell Options: </div>
        <div class="col-md-2">@Model.ShellOption</div>
        <div class="col-md-2 fw-bold">Shell Extension: </div>
        <div class="col-md-2">@Model.ShellExt</div>
    </div>
    
    <div class="overflow-auto height-max-1 rounded my-3">
        <pre id="snapshotScript" class="m-0 p-2">@Model.Script</pre>
    </div>
</div>

@section Scripts {
    <script>
        let statusEl = document.querySelector("#status");
        let startedAtEl = document.querySelector("#startedAt");
        let completedAtEl = document.querySelector("#completedAt");
        let elapsedEl = document.querySelector("#elapsed");
        let outputEl = document.querySelector("#output");
        let outputLengthEl = document.querySelector("#outputLength");
        let lastPoint = 0;
        let outputElChildren = [];
        let processing = false;

        let interval = setInterval(function() {
                if (processing) {
                    return;
                }

                submitRequest(`/api/run/@Model.RunId/output?lastPoint=${lastPoint}`,
                    {
                        okAction: function(res) {
                            lastPoint = res.lastPoint;
                            statusEl.innerHTML = res.status;
                            startedAtEl.innerHTML = res.startedAt;
                            startedAtEl.setAttribute("title", res.startedAtTooltip);
                            completedAtEl.innerHTML = res.completedAt;
                            completedAtEl.setAttribute("title", res.completedAtTooltip);
                            elapsedEl.innerHTML = res.elapsed;
                            addToOutput(res.outputs);

                            if (res.status === "Completed" || res.status === "Stopped" || res.status === "Dead") {
                                clearInterval(interval);
                            }
                        },
                        postAction: function() {
                            processing = false;
                        },
                        preAction: function() {
                            processing = true;
                        }
                    });
            },
            2000);

        function addToOutput(outputs) {
            let childrenLengthToRemove = Math.max(0, outputElChildren.length + outputs.length - 100);
            outputElChildren = outputElChildren.slice(childrenLengthToRemove);

            outputs.forEach(o => {
                outputElChildren.push(o.message);
            });

            outputEl.innerHTML = outputElChildren.join("<br/>");
            outputLengthEl.innerText = outputElChildren.length;
            outputEl.scrollTop = outputEl.scrollHeight;
        }

        hljs.highlightElement(document.querySelector("#snapshotScript"));
    </script>
}
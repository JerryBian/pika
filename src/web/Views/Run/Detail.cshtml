@model TaskRunDetailViewModel
@{
    ViewData["Title"] = $"Run #{Model.Run.Id}";
}

<div class="bg-light rounded p-2 my-4 small">
    <div class="row mb-2">
        <div class="col-md-2 fw-bold">Id</div>
        <div class="col-md-4">
            #@Model.Run.Id
        </div>
        <div class="col-md-2 fw-bold">Task</div>
        <div class="col-md-4">
            @Model.Task.Name (<a href="/task/@Model.Task.Id">#@Model.Task.Id</a>)
        </div>
    </div>
    <div class="row mb-2">
        <div class="col-md-2 fw-bold">Created At</div>
        <div class="col-md-4">
            @Html.Raw(Model.Run.GetCreatedAtHtml())
        </div>
        <div class="col-md-2 fw-bold">Status</div>
        <div class="col-md-4" id="status">
            -
        </div>
    </div>
    <div class="row mb-2">
        <div class="col-md-2 fw-bold">Started At</div>
        <div class="col-md-4" id="startedAt">
            -
        </div>
        <div class="col-md-2 fw-bold">Completed At</div>
        <div class="col-md-4" id="completedAt">
            -
        </div>
    </div>
    <div class="row mb-2">
        <div class="col-md-2 fw-bold">Elapsed</div>
        <div class="col-md-10" id="elapsed">
            -
        </div>
    </div>
</div>

<div class="my-4">
    <h4>Output</h4>
    <p class="small">Displaying latest <span id="outputLength">0</span> records, check full records <a href="/run/@Model.Run.Id/output/raw" target="_blank">here</a>.</p>
    <pre id="output" class="overflow-auto p-2 height-max-2 bg-light rounded mb-2">
    </pre>
</div>

<div class="my-4">
    <h4>Snapshot</h4>
    <div class="row small">
        <div class="col-md-2 fw-bold">Shell Name: </div>
        <div class="col-md-2">@Model.Run.ShellName</div>
        <div class="col-md-2 fw-bold">Shell Options: </div>
        <div class="col-md-2">@Model.Run.ShellOption</div>
        <div class="col-md-2 fw-bold">Shell Extension: </div>
        <div class="col-md-2">@Model.Run.ShellExt</div>
    </div>

    <div class="overflow-auto height-max-1 rounded my-3">
        <pre id="snapshotScript" class="m-0 p-2">@Model.Run.Script</pre>
    </div>
</div>

@section Scripts {
    <script>
        let statusEl = document.querySelector("#status");
        let startedAtEl = document.querySelector("#startedAt");
        let completedAtEl = document.querySelector("#completedAt");
        let elapsedEl = document.querySelector("#elapsed");
        let outputEl = document.querySelector("#output");
        let outputLengthEl = document.querySelector("#outputLength");
        let lastPoint = 0;
        let processing = false;

        let interval = setInterval(function() {
                if (processing) {
                    return;
                }

                submitRequest(`/api/run/@Model.Run.Id/output?lastPoint=${lastPoint}`,
                    {
                        okAction: function(res) {
                            lastPoint = res.lastPoint;
                            statusEl.innerHTML = res.status;
                            startedAtEl.innerHTML = res.startedAt;
                            startedAtEl.setAttribute("title", res.startedAtTooltip);
                            completedAtEl.innerHTML = res.completedAt;
                            completedAtEl.setAttribute("title", res.completedAtTooltip);
                            elapsedEl.innerHTML = res.elapsed;
                            addToOutput(res.outputs);

                            if (res.status === "Completed" || res.status === "Stopped" || res.status === "Dead") {
                                clearInterval(interval);
                            }

                            if (res.status === "Running") {
                                statusEl.innerHTML += ` (<a href="javascript:;" class="text-danger" onclick="stopRun('@Model.Run.Id')"><i class="fa-solid fa-stop"></i> Stop</a>)`;
                            }
                        },
                        postAction: function() {
                            processing = false;
                        },
                        preAction: function() {
                            processing = true;
                        }
                    });
            },
            2000);

        function addToOutput(outputs) {
            let existingEls = document.querySelectorAll("#output div");
            let childrenLengthToRemove = Math.max(0, existingEls.length + outputs.length - 100);
            let k = 0;
            existingEls.forEach(el => {
                if (k === childrenLengthToRemove) {
                    return;
                }

                el.remove();
                k++;
            });

            outputs.forEach(o => {
                let text = o.message;
                if (text.length === 0) {
                    text = " ";
                }

                text = escapeHTML(text);
                let div = document.createElement("div");
                div.setAttribute("title", o.createdAt);
                if (o.isError) {
                    div.classList.add("text-danger");
                }
                div.innerHTML = text;
                outputEl.appendChild(div);
            });

            outputLengthEl.innerText = document.querySelectorAll("#output div").length;
            outputEl.scrollTop = outputEl.scrollHeight;
        }

        hljs.highlightElement(document.querySelector("#snapshotScript"));
        setActive("runNav");
    </script>
}